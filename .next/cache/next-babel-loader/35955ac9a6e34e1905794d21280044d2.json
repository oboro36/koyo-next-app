{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"D:\\\\Projects\\\\koyo\\\\next-app\\\\components\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { invokeApi } from '../base/axios';\n\nfunction hasErrors(fieldsError) {\n  return _Object$keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.doLogin(values.username, values.password);\n        }\n      });\n    });\n\n    _defineProperty(this, \"doLogin\", (u, p) => {\n      invokeApi('post', '/login?username=' + u + '&password=' + p, res => {\n        console.log(res.data);\n        this.doSetCookie(u, res.data.token);\n      }, err => {\n        alert(err);\n      });\n    });\n\n    _defineProperty(this, \"doSetCookie\", (u, t) => {\n      invokeApi('post', '/writecookie?username=' + u + '&token=' + t, res => {\n        console.log(res.data);\n      }, err => {\n        alert(err);\n      });\n    });\n\n    _defineProperty(this, \"doGetCookie\", u => {\n      invokeApi('post', '/readcookie?username=' + u, res => {\n        console.log(res.data);\n      }, err => {\n        alert(err);\n      });\n    });\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched('username') && getFieldError('username');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return __jsx(_Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(_Form.Item, {\n      validateStatus: usernameError ? 'error' : '',\n      help: usernameError || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(__jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), __jsx(_Form.Item, {\n      validateStatus: passwordError ? 'error' : '',\n      help: passwordError || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(__jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), __jsx(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Log in\")));\n  }\n\n}\n\nconst WrappedLoginForm = _Form.create({\n  name: 'horizontal_login'\n})(LoginForm);\n\nexport default WrappedLoginForm;","map":{"version":3,"sources":["D:\\Projects\\koyo\\next-app\\components\\login.js"],"names":["invokeApi","hasErrors","fieldsError","some","field","LoginForm","React","Component","e","preventDefault","props","form","validateFields","err","values","doLogin","username","password","u","p","res","console","log","data","doSetCookie","token","alert","t","componentDidMount","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","handleSubmit","rules","required","message","color","WrappedLoginForm","create","name"],"mappings":"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","sourcesContent":["import { Form, Icon, Input, Button } from 'antd';\r\nimport {invokeApi} from '../base/axios'\r\n\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.doLogin(values.username, values.password)\r\n            }\r\n        });\r\n    };\r\n\r\n    doLogin = (u, p) => {\r\n        invokeApi('post', '/login?username=' + u + '&password=' + p,\r\n            (res) => {\r\n                console.log(res.data)\r\n                this.doSetCookie(u,res.data.token)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    doSetCookie = (u, t) => {\r\n        invokeApi('post', '/writecookie?username=' + u + '&token=' + t,\r\n            (res) => {\r\n                console.log(res.data)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    doGetCookie = (u) => {\r\n        invokeApi('post', '/readcookie?username=' + u,\r\n            (res) => {\r\n                console.log(res.data)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n        // Only show error after a field is touched.\r\n        const usernameError = isFieldTouched('username') && getFieldError('username');\r\n        const passwordError = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''}>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'horizontal_login' })(LoginForm)\r\n\r\nexport default WrappedLoginForm"]},"metadata":{},"sourceType":"module"}