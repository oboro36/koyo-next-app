{"ast":null,"code":"import \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/menu/style/css\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/layout/style/css\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"D:\\\\Projects\\\\koyo\\\\next-app\\\\components\\\\sidebar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport Link from 'next/link';\nconst {\n  Sider\n} = _Layout;\nconst {\n  SubMenu\n} = _Menu;\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      //Modal\n      ModalText: 'Please set up your settings below.',\n      visible: false,\n      confirmLoading: false,\n      //Side Bar\n      collapsed: false,\n      content: 'main'\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(this, \"handleOk\", () => {\n      this.setState({\n        ModalText: 'Setting in process . . . ',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    });\n\n    _defineProperty(this, \"handleCancel\", () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(this, \"onCollapse\", collapsed => {\n      this.setState({\n        collapsed\n      });\n      this.setState({\n        showUserInfo: !collapsed\n      });\n      this.props.doCollapse(collapsed);\n    });\n\n    _defineProperty(this, \"handleMenuClick\", event => {\n      const pageName = event.item.props.name;\n      this.setContent(pageName);\n      Router.push({\n        pathname: '/' + pageName\n      }); // Router.push({ pathname: '/' + pageName, query: { name: 'PALM' } })\n    });\n\n    _defineProperty(this, \"setContent\", content => {\n      this.setState({\n        content: content\n      });\n    });\n\n    this.style = {\n      backgroundColor: '#f0f2f5',\n      display: 'flex',\n      height: '100%',\n      columnGap: '5px',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      margin: '10px 10px 10px 10px',\n      padding: '5px',\n      borderRadius: '5px'\n    };\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //     if (this.state.content != nextState.content) {\n  //         console.log('content diff')\n  //         return true\n  //     } else if (this.state.collapsed != nextState.collapsed) {\n  //         console.log('collapse diff')\n  //         return true\n  //     } else {\n  //         console.log('other')\n  //         return false\n  //     }\n  // }\n\n\n  render() {\n    return __jsx(Sider, {\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      onCollapse: this.onCollapse,\n      style: {\n        overflow: 'auto',\n        height: '100vh',\n        position: 'fixed',\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.collapsed ? __jsx(\"div\", {\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(_Avatar, {\n      icon: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })) : __jsx(\"div\", {\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(_Avatar, {\n      icon: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Mr.Palm \"), __jsx(_Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"setting\",\n      size: \"default\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), __jsx(Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(_Button, {\n      type: \"danger\",\n      shape: \"circle\",\n      icon: \"logout\",\n      size: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), __jsx(_Menu, {\n      theme: \"dark\",\n      mode: \"inline\",\n      onClick: this.handleMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(_Menu.Item, {\n      key: \"1\",\n      name: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(_Icon, {\n      type: \"pie-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Dashboard\")), __jsx(_Menu.Item, {\n      key: \"2\",\n      name: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(_Icon, {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"About\")), __jsx(SubMenu, {\n      key: \"sub1\",\n      title: __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Utility\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(_Menu.Item, {\n      key: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Site Data Compare\"), __jsx(_Menu.Item, {\n      key: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Transfer File\")))), __jsx(_Modal, {\n      title: \"User Config\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      confirmLoading: this.state.confirmLoading,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.ModalText)));\n  }\n\n}\n\nSideBar.getInitialProps = async ({\n  req\n}) => {\n  return {\n    isServer: !!req\n  };\n};\n\nexport default SideBar;","map":{"version":3,"sources":["D:\\Projects\\koyo\\next-app\\components\\sidebar.js"],"names":["Router","Link","Sider","SubMenu","SideBar","React","Component","constructor","props","ModalText","visible","confirmLoading","collapsed","content","setState","setTimeout","console","log","showUserInfo","doCollapse","event","pageName","item","name","setContent","push","pathname","style","backgroundColor","display","height","columnGap","justifyContent","alignItems","margin","padding","borderRadius","render","state","onCollapse","overflow","position","left","showModal","handleMenuClick","handleOk","handleCancel","getInitialProps","req","isServer"],"mappings":"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","sourcesContent":["import { Layout, Menu, Icon, Row, Col, Avatar, Modal, Button, Breadcrumb } from 'antd';\r\nimport Router from 'next/router'\r\nimport Link from 'next/link'\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SideBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.style = {\r\n            backgroundColor: '#f0f2f5',\r\n            display: 'flex',\r\n            height: '100%',\r\n            columnGap: '5px',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            margin: '10px 10px 10px 10px',\r\n            padding: '5px',\r\n            borderRadius: '5px',\r\n        }\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (this.state.content != nextState.content) {\r\n    //         console.log('content diff')\r\n    //         return true\r\n    //     } else if (this.state.collapsed != nextState.collapsed) {\r\n    //         console.log('collapse diff')\r\n    //         return true\r\n    //     } else {\r\n    //         console.log('other')\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    state = {\r\n        //Modal\r\n        ModalText: 'Please set up your settings below.',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        //Side Bar\r\n        collapsed: false,\r\n        content: 'main',\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            ModalText: 'Setting in process . . . ',\r\n            confirmLoading: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false,\r\n            });\r\n        }, 2000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed })\r\n        this.setState({ showUserInfo: !collapsed })\r\n        this.props.doCollapse(collapsed)\r\n    };\r\n\r\n    handleMenuClick = (event) => {\r\n        const pageName = event.item.props.name\r\n        this.setContent(pageName)\r\n        Router.push({ pathname: '/' + pageName})\r\n        // Router.push({ pathname: '/' + pageName, query: { name: 'PALM' } })\r\n    }\r\n\r\n    setContent = (content) => {\r\n        this.setState({ content: content })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                }}\r\n            >\r\n                <div>\r\n                    {/* <div className=\"logo\"><img style={{ margin: ' 10px 0px 10px 0px', position: 'relative', left: '25%' ,width: '50%' }} src=\"static/logo.svg\" /></div> */}\r\n                    <div>\r\n                        {this.state.collapsed ?\r\n                            <div style={this.style}>\r\n                                <Avatar icon=\"user\" />\r\n                            </div>\r\n                            :\r\n                            <div style={this.style}>\r\n                                <Avatar icon=\"user\" />\r\n                                <span> Mr.Palm </span>\r\n                                <Button type=\"primary\" shape=\"circle\" icon=\"setting\" size=\"default\" onClick={this.showModal}/>\r\n                                <Link href=\"/\">\r\n                                    <Button type=\"danger\" shape=\"circle\" icon=\"logout\" size=\"default\" />\r\n                                </Link>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <Menu theme=\"dark\" mode=\"inline\" onClick={this.handleMenuClick}>\r\n                        <Menu.Item key=\"1\" name=\"main\">\r\n                            <Icon type=\"pie-chart\" />\r\n                            <span>Dashboard</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" name=\"about\">\r\n                            <Icon type=\"file\" />\r\n                            <span>About</span>\r\n                        </Menu.Item>\r\n                        <SubMenu\r\n                            key=\"sub1\"\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"user\" />\r\n                                    <span>Utility</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"3\">Site Data Compare</Menu.Item>\r\n                            <Menu.Item key=\"4\">Transfer File</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n                <Modal\r\n                    title=\"User Config\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    confirmLoading={this.state.confirmLoading}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <p>{this.state.ModalText}</p>\r\n                </Modal>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nSideBar.getInitialProps = async ({ req }) => {\r\n    return { isServer: !!req };\r\n};\r\n\r\nexport default SideBar"]},"metadata":{},"sourceType":"module"}