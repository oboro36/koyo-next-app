{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"D:\\\\Projects\\\\koyo\\\\next-app\\\\components\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { invokeApi } from '../base/axios';\n\nfunction hasErrors(fieldsError) {\n  return _Object$keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          _this.doLogin(values.username, values.password);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doLogin\", function (u, p) {\n      invokeApi('post', '/login?username=' + u + '&password=' + p, function (res) {\n        console.log(res.data);\n\n        _this.doSetCookie(u, res.data.token);\n      }, function (err) {\n        alert(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doSetCookie\", function (u, t) {\n      invokeApi('post', '/writecookie?username=' + u + '&token=' + t, function (res) {\n        console.log(res.data);\n      }, function (err) {\n        alert(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doGetCookie\", function (u) {\n      invokeApi('post', '/readcookie?username=' + u, function (res) {\n        console.log(res.data);\n      }, function (err) {\n        alert(err);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n      var usernameError = isFieldTouched('username') && getFieldError('username');\n      var passwordError = isFieldTouched('password') && getFieldError('password');\n      return __jsx(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(_Form.Item, {\n        validateStatus: usernameError ? 'error' : '',\n        help: usernameError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(__jsx(_Input, {\n        prefix: __jsx(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), __jsx(_Form.Item, {\n        validateStatus: passwordError ? 'error' : '',\n        help: passwordError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(__jsx(_Input, {\n        prefix: __jsx(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), __jsx(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Log in\")));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar WrappedLoginForm = _Form.create({\n  name: 'horizontal_login'\n})(LoginForm);\n\nexport default WrappedLoginForm;","map":{"version":3,"sources":["D:\\Projects\\koyo\\next-app\\components\\login.js"],"names":["invokeApi","hasErrors","fieldsError","some","field","LoginForm","e","preventDefault","props","form","validateFields","err","values","doLogin","username","password","u","p","res","console","log","data","doSetCookie","token","alert","t","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","handleSubmit","rules","required","message","color","React","Component","WrappedLoginForm","create","name"],"mappings":"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","sourcesContent":["import { Form, Icon, Input, Button } from 'antd';\r\nimport {invokeApi} from '../base/axios'\r\n\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.doLogin(values.username, values.password)\r\n            }\r\n        });\r\n    };\r\n\r\n    doLogin = (u, p) => {\r\n        invokeApi('post', '/login?username=' + u + '&password=' + p,\r\n            (res) => {\r\n                console.log(res.data)\r\n                this.doSetCookie(u,res.data.token)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    doSetCookie = (u, t) => {\r\n        invokeApi('post', '/writecookie?username=' + u + '&token=' + t,\r\n            (res) => {\r\n                console.log(res.data)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    doGetCookie = (u) => {\r\n        invokeApi('post', '/readcookie?username=' + u,\r\n            (res) => {\r\n                console.log(res.data)\r\n            },\r\n            (err) => {\r\n                alert(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n        // Only show error after a field is touched.\r\n        const usernameError = isFieldTouched('username') && getFieldError('username');\r\n        const passwordError = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''}>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'horizontal_login' })(LoginForm)\r\n\r\nexport default WrappedLoginForm"]},"metadata":{},"sourceType":"module"}