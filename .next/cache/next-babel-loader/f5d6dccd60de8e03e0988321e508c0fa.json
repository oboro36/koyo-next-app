{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Apache24\\\\app\\\\koyo\\\\next-app\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport MainLayout from '../components/mainlayout';\nimport axios from 'axios'; // import Login from '../components/login'\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"setLoggedState\", function (data) {\n      _this.setState({\n        logged: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isLoggedIn\", function () {\n      return _this.state.logged;\n    });\n\n    _this.state = {\n      logged: false\n    };\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return (// this.isLoggedIn() ? (\n        __jsx(MainLayout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(Component, _extends({}, pageProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }))) // ) : <Login setLoggedState={this.setLoggedState} />\n\n      );\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }() // componentDidMount(){\n    //     this.authen()\n    // }\n    // authen = () => {\n    //     axios.post('http://localhost:1323/auth', config)\n    //             .then(response => {\n    //                 let result = response.data\n    //                 console.log(result)\n    //                 self.setState({ logged: true })\n    //             })\n    //             .catch(error => {\n    //                 alert(error)\n    //                 self.setState({ logged: false })\n    //             });\n    // } \n\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["C:\\Apache24\\app\\koyo\\next-app\\pages\\_app.js"],"names":["React","App","Container","MainLayout","axios","MyApp","props","data","setState","logged","state","Component","pageProps","router","ctx","getInitialProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;IAEqBC,K;;;;;AAEjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,qEAmCF,UAACC,IAAD,EAAU;AACvB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF;AAAV,OAAd;AACH,KArCkB;;AAAA,iEAwCN,YAAM;AACf,aAAO,MAAKG,KAAL,CAAWD,MAAlB;AACH,KA1CkB;;AAEf,UAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AADC,KAAb;AAFe;AAKlB;;;;6BAuCQ;AAAA,wBAC4B,KAAKH,KADjC;AAAA,UACGK,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAEL,aACI;AACI,cAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAFR,CAKI;;AALJ;AAOH;;;;;;;;;;;;AA9C8BD,gBAAAA,S,QAAAA,S,EAAWE,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC1CF,gBAAAA,S,GAAY,E;;qBAEZD,SAAS,CAACI,e;;;;;;uBACQJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,gBAAAA,S;;;iDAGG;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;QAGX;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAnC+BX,G;;SAAdI,K","sourcesContent":["import React from 'react'\r\nimport App, { Container } from 'next/app'\r\nimport MainLayout from '../components/mainlayout'\r\nimport axios from 'axios'\r\n// import Login from '../components/login'\r\n\r\nexport default class MyApp extends App {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            logged: false\r\n        }\r\n    }\r\n\r\n    static async getInitialProps({ Component, router, ctx }) {\r\n        let pageProps = {}\r\n\r\n        if (Component.getInitialProps) {\r\n            pageProps = await Component.getInitialProps(ctx)\r\n        }\r\n\r\n        return { pageProps }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     this.authen()\r\n    // }\r\n\r\n    // authen = () => {\r\n    //     axios.post('http://localhost:1323/auth', config)\r\n    //             .then(response => {\r\n    //                 let result = response.data\r\n    //                 console.log(result)\r\n\r\n    //                 self.setState({ logged: true })\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 alert(error)\r\n    //                 self.setState({ logged: false })\r\n    //             });\r\n    // } \r\n\r\n    setLoggedState = (data) => {\r\n        this.setState({ logged: data })\r\n    }\r\n\r\n\r\n    isLoggedIn = () => {\r\n        return this.state.logged\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps } = this.props\r\n        return (\r\n            // this.isLoggedIn() ? (\r\n                <MainLayout>\r\n                    <Component {...pageProps} />\r\n                </MainLayout>\r\n            // ) : <Login setLoggedState={this.setLoggedState} />\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}